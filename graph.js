// Generated by CoffeeScript 1.6.2
(function() {
  var MabogoGraph;

  MabogoGraph = (function() {
    function MabogoGraph(body) {
      this.body = body;
      this.vis = this.body.find("svg#mobogo-graph");
      this.selection = d3.select(this.vis[0]);
      this._setup();
    }

    MabogoGraph.prototype._setup = function() {
      var colors,
        _this = this;

      this.graphWidth = 800;
      this.graphHeight = 400;
      this.margin = {
        top: 40,
        bottom: 40,
        left: 40,
        right: 40
      };
      this.xScale = d3.scale.ordinal().rangeRoundBands([0, this.graphWidth - this.margin.left - this.margin.right], 0.14);
      colors = this.vis.data("colors") || ['#7b9bb4', '#e9d7c3', '#b6c477', '#f8a363', '#c56767'];
      this.colorScale = d3.scale.ordinal().range(colors);
      this.yScale = d3.scale.linear().range([0, this.graphHeight - this.margin.top - this.margin.bottom]);
      this.inverted_yScale = d3.scale.linear().range([this.graphHeight - this.margin.top - this.margin.bottom, 0]);
      this.animDuration = 1000;
      this.tick_padding = {
        x: 11,
        y: 8
      };
      return d3.json("nodes.json", function(err, nodes) {
        _this.nodes = nodes;
        return d3.json("edges.json", function(err, edges) {
          _this.edges = edges;
          return _this.drawChart();
        });
      });
    };

    MabogoGraph.prototype._setScales = function() {
      var _this = this;

      (function(yMax) {
        _this.yScale.domain([0, yMax + 200]);
        return _this.inverted_yScale.domain([0, yMax + 200]);
      })(30000);
      return this.xScale.domain(d3.range(this.data[0].length));
    };

    return MabogoGraph;

  })();

  $(function() {
    return $("#mobogo-graph-container").each(function() {
      return new MabogoGraph($(this));
    });
  });

}).call(this);
